SOMMAIRE : 

    1/Organisation du projet (document transmis à Valérie en début de projet)
    2/Analyse fonctionnelle
    3/Analyse structurelle

    1/Organisation du projet

        a/ Le modèle d’organisation de projet
Nous avons choisi de fonctionner avec une méthode en V. Nous nous sommes entendu sur le fait que cette maniere de travailler semblait nous correspondre le mieux.
Disposant d’un cahier des charges définitif et précis, les exigences du clients sont fixées, ce qui est en accord avec le choix d’une méthode en V.
        b/ Organisation d’équipe
Nous avons décidé de définir un responsable d’équipe différent chaque mois.
1er mois  : Hugo
2eme mois : Steven
3eme mois : Benjamin
Après avoir défini les tâches de travail, nous avons choisi d’utiliser Trello pour communiquer sur l’avancée des différentes actions à mener.
Réunion toute les semaines le mercredi 20h00.
Deux tâches maximum “en cours” par membre de l’équipe afin d’eviter d’avoir que des tâches en cours et aucune de terminer.
        c/ Architecture
L’architecture choisie est la MVC (Modele, Vue, Controller).
La raison du choix est simple , nous allons devoir gérer une base de données et nous avons le langage de programation C# imposé.
        d/ Outils
Choix de l’IDE : Visual Studio Code
Versioning : Création d’un repository sur GitHub
Création d’un Trello
SQL, C#, html, css bootstrap (framework)
diagramme mcd


    2/Analyse fonctionnelle

        a/ Objectif
Dans le cadre de son activité commerciale, la société Negosud a fait appel aux services de BHS Services pour développer une application.
Les besoins fonctionnels du produit sont :
        - gestion des stocks :

                - créer des clients
                - créer des fournisseurs
                - créer des familles
                - créer des articles
                - modifier les stocks automatiquement suite à une commande
                - passer une commande fournisseur

        - gestion d'inventaire

                - inventorier les articles
                - régulariser les stocks (suite au renseignement des quantités inventoriés ?)

        - gestion des commandes clients

                - si quantité en stocks > quantité commandée 
                        --> valider la commande client 
                - si quantité en stocks < quantité commandée && réapproAuto = true 
                        --> valider la commande client et générer un bon de commande fournisseur
                - si quantité en stocks < quantité commandée && réapproAuto = false 
                        --> informer de l'indisponibilité du produit concerné
                                si la commande ne contient pas d'articles en stocks
                                         --> "désolé, nous ne pouvons répondre favorablement à cette commande, nous pouvons néanmoins vous proposer : <liste d'articles similaires>"
                                si la commande contient des articles en stocks
                                         --> modifier et valider la commande avec les produits en stock 


    3/Analyse structurelle

    ORM : Object Rational Mapping --> using Linq to SQL --Langage Integrated Query
    Serveur final sur plateforme Linux ou Windows --> choix de la plateforme .NET Core 3.1 (3.1.20 LTS) puisqu'il est cross platform et Long Term Support
        ou 
    Serveur final sur plateforme Linux ou Windows --> choix de la plateforme .NET 5 (5.0.11) puisqu'il est cross platform